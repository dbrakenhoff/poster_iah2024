
@article{hughes_flopy_2023,
	title = {{FloPy} {Workflows} for {Creating} {Structured} and {Unstructured} {MODFLOW} {Models}},
	volume = {n/a},
	copyright = {© 2023 The Authors. Groundwater published by Wiley Periodicals LLC on behalf of National Ground Water Association. This article has been contributed to by U.S. Government employees and their work is in the public domain in the USA.},
	issn = {1745-6584},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/gwat.13327},
	doi = {10.1111/gwat.13327},
        year = 2023,
	abstract = {FloPy is a Python package for creating, running, and post-processing MODFLOW-based groundwater flow and transport models. FloPy functionality has expanded to support the latest version of MODFLOW (MODFLOW 6) including support for unstructured grids. FloPy can simplify the process required to download MODFLOW-based and other executables for Linux, MacOS, and Windows operating systems. Expanded FloPy capabilities include (1) full support for structured and unstructured spatial discretizations; (2) geoprocessing of spatial features and raster data to develop model input for supported discretization types; (3) the addition of functionality to provide direct access to simulated output data; (4) extension of plotting capabilities to unstructured MODFLOW 6 discretization types; and (5) the ability to export model data to shapefiles, NetCDF, and VTK formats for processing, analysis, and visualization by other software products. Examples of using expanded FloPy capabilities are presented for a hypothetical watershed. An unstructured groundwater flow and transport model, with several advanced stress packages, is presented to demonstrate how FloPy can be used to develop complicated unstructured model datasets from original source data (shapefiles and rasters), post-process model results, and plot simulated results.},
	language = {en},
	number = {n/a},
	urldate = {2023-06-14},
	journal = {Groundwater},
	author = {Hughes, Joseph D. and Langevin, Christian D. and Paulinski, Scott R. and Larsen, Joshua D. and Brakenhoff, David},
}

@article{bakker_derivation_2008,
	title = {Derivation and relative performance of strings of line elements for modeling (un)confined and semi-confined flow},
	volume = {31},
	issn = {0309-1708},
	doi = {10.1016/j.advwatres.2008.02.005},
	abstract = {In the analytic element method, strings of line-sinks may be used to model streams and strings of line-doublets may be used to model impermeable walls or boundaries of inhomogeneities. The resulting solutions are analytic, but the boundary conditions are met approximately. Equations for line elements may be derived in two ways: through integration of point elements (the integral solution) and through application of separation of variables in elliptical coordinates (the elliptical solution). Using both approaches, two sets of line elements are presented for four flow problems: line-sinks and line-doublets in (un)confined flow, and line-sinks and line-doublets in semi-confined flow. Elliptical line elements have the advantage that they do not need a far-field expansion for accurate evaluation far away from the element. The derivation of elliptical line elements is new and applicable to both (un)confined flow and semi-confined flow; only the resulting expressions for elliptical line elements for semi-confined flow have not been found in the current groundwater literature. Existing solutions for elliptical line elements for (un)confined flow were intended for the modeling of isolated features. Four examples are presented, one for each flow problem, to demonstrate that strings of elliptical line elements may be used to obtain accurate solutions; elliptical line-doublets for semi-confined flow can only be strung together in combination with two integral line-doublets. For a zigzag canal in (un)confined flow, a string of elliptical line-sinks performed better than a string of integral line-sinks of the same order when the smallest angle between two adjacent segments is less than 130°. Elliptical line-doublets performed better than integral line-doublets for a square inhomogeneity in a uniform, confined flow field; the difference was smaller for an octagonal inhomogeneity. For semi-confined flow, the difference between the integral and elliptical line-sinks was small when modeling a zigzag canal.},
	number = {6},
	urldate = {2023-12-20},
	journal = {Advances in Water Resources},
	author = {Bakker, Mark},
	month = jun,
	year = {2008},
	keywords = {Analytic element method, Line elements, Line-doublet, Line-sink},
	pages = {906--914},
}

@article{bakker_writing_2009,
	title = {Writing {Analytic} {Element} {Programs} in {Python}},
	volume = {47},
	copyright = {Copyright © 2009 The Author(s). Journal Compilation © 2009 National Ground Water Association},
	issn = {1745-6584},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1745-6584.2009.00583.x},
	doi = {10.1111/j.1745-6584.2009.00583.x},
	abstract = {The analytic element method is a mesh-free approach for modeling ground water flow at both the local and the regional scale. With the advent of the Python object-oriented programming language, it has become relatively easy to write analytic element programs. In this article, an introduction is given of the basic principles of the analytic element method and of the Python programming language. A simple, yet flexible, object-oriented design is presented for analytic element codes using multiple inheritance. New types of analytic elements may be added without the need for any changes in the existing part of the code. The presented code may be used to model flow to wells (with either a specified discharge or drawdown) and streams (with a specified head). The code may be extended by any hydrogeologist with a healthy appetite for writing computer code to solve more complicated ground water flow problems.},
	language = {en},
	number = {6},
	urldate = {2024-05-29},
	journal = {Groundwater},
	author = {Bakker, Mark and Kelson, Victor A.},
	year = {2009},
	pages = {828--834},
}

@book{mark_bakker_analytical_2022,
	address = {Leiden},
	title = {Analytical {Groundwater} {Modeling} : {Theory} and {Applications} {Using} {Python}},
	volume = {First edition},
	isbn = {978-1-138-02939-2},
	shorttitle = {Analytical {Groundwater} {Modeling}},
	abstract = {This book provides a detailed description of how Python can be used to give insight into the flow of groundwater based on analytic solutions. Starting with simple problems to illustrate the basic principles, complexity is added step by step to show how one-dimensional and two-dimensional models of one or two aquifers can be implemented. Steady and transient flow problems are discussed in confined, semi-confined, and unconfined aquifers that may include wells, rivers, and areal recharge. Special consideration is given to coastal aquifers, including the effect of tides and the simulation of interface flow.Application of Python allows for compact and readable code, and quick visualization of the solutions. Python scripts are provided to reproduce all results. The scripts are also available online so that they can be altered to meet site-specific conditions. This book is intended both as training material for the next generation of university students and as a useful resource for practitioners. A primer is included for those who are new to Python or as a refresher for existing users.},
	language = {English},
	urldate = {2024-06-02},
	publisher = {CRC Press},
	author = {{Mark Bakker} and {Vincent Post}},
	year = {2022},
	keywords = {Groundwater flow--Computer simulation, Groundwater--Mathematical models, MATHEMATICS / General, Python (Computer program language), SCIENCE / Environmental Science, TECHNOLOGY \& ENGINEERING / Civil / General, TECHNOLOGY \& ENGINEERING / Environmental / Water Supply},
}